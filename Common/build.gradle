plugins {
    id('java')
    id('org.spongepowered.gradle.vanilla') version '0.2.1-SNAPSHOT'
}

archivesBaseName = "${mod_name}-common-${minecraft_version}"

minecraft {
    version(minecraft_version)
    runs {
        if (project.hasProperty('common_runs_enabled') ? project.findProperty('common_runs_enabled').toBoolean() : true) {
            server(project.hasProperty('common_server_run_name') ? project.findProperty('common_server_run_name') : 'vanilla_server') {
                workingDirectory(this.file("run"))
            }
            client(project.hasProperty('common_client_run_name') ? project.findProperty('common_client_run_name') : 'vanilla_client') {
                workingDirectory(this.file("run"))
            }
        }
    }
}

sourceSets.main.resources.srcDir 'src/generated/resources'

dependencies {
    compileOnly group: 'org.spongepowered', name: 'mixin', version: '0.8.6'
    compileOnly("com.google.code.findbugs:jsr305:3.0.2")
    compileOnly("org.ow2.asm:asm-tree:9.5")
    implementation 'blue.endless:jankson:1.2.1'
}

processResources {
    def buildProps = project.properties.clone()
    buildProps.put("mod_id", "${mod_id}") // Ensure mod_id is available
    filesMatching(['pack.mcmeta', 'block_swap_advanced.mixins.json']) {
        expand buildProps
    }
}

tasks.withType(Javadoc) {
    failOnError false
    options.addStringOption('Xdoclint:none', '-quiet')
}